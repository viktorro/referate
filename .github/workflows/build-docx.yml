  - name: Configure git user
    run: |
      git config user.name "github-actions[bot]"
      git config user.email "github-actions[bot]@users.noreply.github.com"

  - id: check-input
    name: Debug & check input file
    run: |
      echo "Ref: $GITHUB_REF"
      echo "SHA: $GITHUB_SHA"
      echo "Repository root contents:"
      ls -la
      echo "referate folder contents (if present):"
      ls -la referate || true
      if [ -f "${INPUT_MD}" ]; then
        echo "Found ${INPUT_MD}"
        echo "found=true" >> $GITHUB_OUTPUT
      else
        echo "::error::${INPUT_MD} not found in repository."
        echo "found=false" >> $GITHUB_OUTPUT
        exit 1
      fi

  - name: Install pandoc
    if: ${{ steps.check-input.outputs.found == 'true' }}
    run: |
      sudo apt-get update
      sudo apt-get install -y pandoc

  - name: Convert Markdown to DOCX
    if: ${{ steps.check-input.outputs.found == 'true' }}
    run: |
      pandoc -s "$INPUT_MD" -o "$OUTPUT_DOCX" \
        --metadata=title:"Metode de recondiționare. Prelucrări mecanice" \
        --metadata=author:"Ungureanu Victor"
      echo "Converted $INPUT_MD -> $OUTPUT_DOCX"
      ls -la "$(dirname "$OUTPUT_DOCX")" || true

  - name: Commit DOCX back to repository
    if: ${{ steps.check-input.outputs.found == 'true' }}
    uses: stefanzweifel/git-auto-commit-action@v5
    with:
      commit_message: "Build DOCX: ${{ env.OUTPUT_DOCX }}"
      file_pattern: ${{ env.OUTPUT_DOCX }}
